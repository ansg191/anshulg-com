---
interface Props {
  key?: string;
  keyLink?: string;
  valueLink?: string;

  indent?: number;
  keylen?: number;
}

const { key, keyLink, valueLink, indent = 4, keylen } = Astro.props;

const keyPadding = key && keylen ? keylen - key.length : 0;
---

<p class="m-4" style=`margin-left: calc(var(--spacing) * ${indent})`>
  {
    keyLink ? (
      <a
        href={keyLink}
        target="_blank"
        rel="noopener noreferrer"
        class="relative inline-block"
      >
        <span class="key link">{key}</span>
        <slot name="key-extra" />
      </a>
    ) : (
      <>
        <span class="key">{key}</span>
        <slot name="key-extra" />
      </>
    )
  }
  <span style=`padding-left: ${keyPadding}ch`>&mdash;</span>
  {
    valueLink ? (
      <a
        href={valueLink}
        target="_blank"
        rel="noopener noreferrer"
        class="link"
      >
        <slot />
      </a>
    ) : (
      <slot />
    )
  }
</p>

<style>
  .link {
    color: var(--color-blue-700);
    text-decoration-line: underline;
    text-underline-offset: 4px;
  }

  .key {
    background-color: var(--color-gray-200);
    padding: calc(var(--spacing) * 1); /* p-1 */
    border-radius: var(--radius-sm); /* rounded-sm */
  }

  /* Dark mode styles */
  @media (prefers-color-scheme: dark) {
    .link {
      color: var(--color-blue-300);
    }

    .key {
      background-color: var(--color-gray-700);
    }
  }
</style>
